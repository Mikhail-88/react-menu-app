{"version":3,"sources":["components/app-header/shopping-cart-solid.svg","components/app/food-bg.jpg","components/menu-list-item/index.js","components/menu-list-item/menu-list-item.js","components/resto-service-context/index.js","components/resto-service-context/resto-service-context.js","components/hoc/index.js","components/hoc/with-resto-service.js","actions/index.js","components/spinner/index.js","components/spinner/spinner.js","components/error/index.js","components/error/error.js","components/menu-list/menu-list.js","components/menu-list/index.js","components/pages/main-page.js","components/cart-table/cart-table.js","components/cart-table/index.js","components/pages/cart-page.js","components/menu-item/menu-item.js","components/menu-item/index.js","components/pages/item-page.js","components/app-header/index.js","components/app-header/app-header.js","components/app/index.js","components/app/app.js","components/error-boundry/index.js","components/error-boundry/error-boundry.js","reducers/index.js","store.js","index.js","services/resto-service.js"],"names":["module","exports","__webpack_require__","p","MenuListItem","_ref","menuItem","onAddToCart","title","price","url","category","id","react_default","a","createElement","className","src","alt","concat","onClick","react_router_dom","to","RestoServiceContext","React","createContext","WithRestoService","Wrapped","props","components_resto_service_context","Consumer","RestoService","Object","assign","menuLoaded","newMenu","type","payload","requested","hasError","addToCart","Spinner","Error","MenuList","_this$props","this","menuItems","length","getMenuItems","then","result","catch","error","_this$props2","isLoading","isError","components_error","components_spinner","map","components_menu_list_item","key","Component","mapDispatchToProps","connect","state","menu","MainPage","components_menu_list","CartTable","onTakeOrder","_this","itemsInCart","clearCart","setOrder","generateOrder","_this2","isOrderTook","deleteFromCart","Fragment","item","quantity","items","name","portions","CartPage","components_cart_table","MenuItem","match","history","find","elem","Number","params","description","goBack","ItemPage","components_menu_item","AppHeader","totalPrice","cartIcon","App","style","background","Background","components_app_header","react_router","path","exact","component","ErrorBoundry","setState","children","initialState","reducer","arguments","undefined","action","objectSpread","some","newItem","filter","toConsumableArray","itemForDelete","store","createStore","restoService","_apiBaseUrl","getResource","_callee","response","regenerator_default","wrap","_context","prev","next","fetch","sent","ok","status","json","abrupt","stop","_callee2","_context2","getOrderNumber","_callee3","orderNumber","_context3","_callee4","order","newOrder","bodyForRequest","_context4","method","headers","Content-Type","body","JSON","stringify","ReactDOM","render","es","error_boundry","Provider","value","components_app","document","getElementById"],"mappings":"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","file":"static/js/main.29731452.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/shopping-cart-solid.701d6d1d.svg\";","module.exports = __webpack_public_path__ + \"static/media/food-bg.698e5e80.jpg\";","import MenuListItem from './menu-list-item';\nexport default MenuListItem;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport './menu-list-item.scss';\n\nconst MenuListItem = ({ menuItem, onAddToCart }) => {\n    const { title, price, url, category, id } = menuItem;\n\n    return (\n        <li className=\"menu__item\">\n            <div className=\"menu__title\">{title}</div>\n            <img className=\"menu__img\" src={url} alt={title}></img>\n            <div className=\"menu__category\">Category: <span>{category}</span></div>\n            <div className=\"menu__price\">Price: <span>{price}$</span></div>\n            <span className={`menu__category_img ${category}`}></span>\n            <div className=\"menu__buttons\">\n                <button \n                    className=\"menu__btn\" \n                    onClick={() => onAddToCart()}>\n                    Add to cart\n                </button>\n                <Link to={`/menu/${id}`} className=\"menu__link\">\n                    View description\n                </Link>\n            </div>\n        </li>\n    ); \n};\n\nMenuListItem.propTypes = {\n    menuItem: PropTypes.object.isRequired,\n    onAddToCart: PropTypes.func.isRequired,\n};\n\nexport default MenuListItem;","import RestoServiceContext from './resto-service-context';\n\nexport default RestoServiceContext;","import React from 'react';\n\nconst RestoServiceContext = React.createContext();\n\nexport default RestoServiceContext;","import WithRestoService from './with-resto-service';\n\nexport default WithRestoService;","import React from 'react';\nimport RestoServiceContext from '../resto-service-context';\n\nconst WithRestoService = () => (Wrapped) => {\n    return (props) => {\n        return (\n            <RestoServiceContext.Consumer>\n                {\n                    (RestoService) => {\n                        return <Wrapped {...props} RestoService={RestoService} />\n                    }\n                }\n            </RestoServiceContext.Consumer>\n        );\n    };\n};\n\nexport default WithRestoService;","const menuLoaded = (newMenu) => {\n  return {\n    type: 'MENU_LOADED',\n    payload: newMenu\n  };\n};\n\nconst requested = () => {\n  return {\n    type: 'REQUSTED',\n  };\n};\n\nconst hasError = () => {\n  return {\n    type: 'HAS_ERROR',\n  };\n};\n\nconst addToCart = (id) => {\n  return {\n    type: 'ADD_TO_CART',\n    payload: id\n  };\n};\n\nconst deleteFromCart = (id) => {\n  return {\n    type: 'DELETE_FROM_CART',\n    payload: id\n  };\n};\n\nconst clearCart = () => {\n  return {\n    type: 'CLEAR_CART',\n  };\n};\n\nexport { menuLoaded, requested, hasError, addToCart, deleteFromCart, clearCart };","import Spinner from './spinner';\n\nexport default Spinner;","import React from 'react';\nimport './spinner.scss';\n\nconst Spinner = () => (\n    <div className=\"loadingio-spinner-spin-1kcfyr334q1\">\n      <div className=\"ldio-0qyrhlsmw4yp\"><div><div></div></div><div><div></div></div><div><div>\n      </div></div><div><div></div></div><div><div></div></div><div><div></div></div><div>\n      <div></div></div><div><div></div></div></div>\n    </div>\n);\n\nexport default Spinner;","import Error from './error';\n\nexport default Error;","import React from 'react';\nimport './error.scss';\n\nconst Error = () => (\n    <div className=\"info-block\">\n        <img \n            src={\"https://cdn.dribbble.com/users/381530/screenshots/3949858/404.gif\"} \n            alt=\"error\"\n        />\n        <p>Something goes wrong, try again later</p>\n    </div>\n);\n\nexport default Error;","import React, { Component } from 'react';\nimport MenuListItem from '../menu-list-item';\nimport { connect } from 'react-redux';\nimport WithRestoService from '../hoc';\nimport { menuLoaded, requested, hasError, addToCart } from '../../actions';\nimport Spinner from '../spinner';\nimport Error from '../error';\nimport PropTypes from 'prop-types';\n\nimport './menu-list.scss';\n\nclass MenuList extends Component {\n    componentDidMount() {\n        const { RestoService, menuItems, menuLoaded, requested, hasError } = this.props;\n\n        if (!menuItems.length) {\n            requested();\n      \n            RestoService.getMenuItems()\n              .then(result => menuLoaded(result))\n              .catch(error => hasError());\n        }\n    }\n    \n\n    render() {\n        const { menuItems, isLoading, isError, addToCart } = this.props;\n\n        if (isError) {\n            return (\n                <div className=\"item__page\">\n                  <Error />\n                </div>\n            );\n        }\n\n        if (isLoading) {\n            return (\n                <div className=\"item__page\">\n                  <Spinner />\n                </div>\n            );\n        }\n\n        return (\n            <ul className=\"menu__list\">\n                {menuItems.map(menuItem => {\n                    return <MenuListItem \n                                key={menuItem.id} \n                                menuItem={menuItem} \n                                onAddToCart={() => addToCart(menuItem.id)} />\n                })}\n            </ul>\n        );\n    };\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        menuItems: state.menu,\n        isLoading: state.isLoading,\n        isError: state.isError\n    };\n};\n\nconst mapDispatchToProps = {\n    menuLoaded, \n    requested, \n    hasError, \n    addToCart \n};\n\nMenuList.propTypes = {\n    RestoService: PropTypes.object.isRequired,\n    menuItems: PropTypes.arrayOf(\n      PropTypes.object,\n    ).isRequired,\n    menuLoaded: PropTypes.func.isRequired,\n    requested: PropTypes.func.isRequired,\n    hasError: PropTypes.func.isRequired,\n    addToCart: PropTypes.func.isRequired,\n    isLoading: PropTypes.bool.isRequired,\n    isError: PropTypes.bool.isRequired\n};\n\nexport default WithRestoService()(connect(\n    mapStateToProps, \n    mapDispatchToProps\n)(MenuList));","import MenuList from './menu-list';\nexport default MenuList;","import React from 'react';\nimport MenuList from '../menu-list';\n\nconst MainPage = () => {\n    return (\n        <MenuList />\n    );\n};\n\nexport default MainPage;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { requested, hasError, deleteFromCart, clearCart } from '../../actions';\nimport WithRestoService from '../hoc';\nimport Spinner from '../spinner';\nimport Error from '../error';\nimport PropTypes from 'prop-types';\n\nimport './cart-table.scss';\n\nclass CartTable extends Component {\n    onTakeOrder = () => {\n        const { RestoService, itemsInCart, clearCart, requested, hasError } = this.props;\n\n        requested();\n\n        RestoService.setOrder(generateOrder(itemsInCart))\n            .then(() => clearCart())\n            .catch(() => hasError());\n    }\n\n    render() {\n        const { itemsInCart, isOrderTook, deleteFromCart, isLoading, isError } = this.props;\n\n        if (!itemsInCart.length && !isOrderTook) {\n            return <div className=\"cart__title\">Your cart is empty!</div>\n        }\n    \n        if (isOrderTook) {\n            return <div className=\"cart__title\">We have accepted your order!</div>\n        }\n\n        if (isError) {\n            return <Error />\n        }\n\n        if (isLoading) {\n            return <Spinner />\n        }\n\n        return (\n            <>\n                <div className=\"cart__title\">Your order:</div>\n                <div className=\"cart__list\">\n                    {itemsInCart.map(item => {\n                        const { title, price, url, id, quantity } = item;\n    \n                        return (\n                            <div key={id} className=\"cart__item\">\n                                <img src={url} className=\"cart__item-img\" alt=\"Cesar salad\"></img>\n                                <div className=\"cart__item-title\">{title}</div>\n                                <div className=\"cart__item-details\">\n                                    <span className=\"cart__item-ins\">Price:</span>\n                                    <span>{price} $</span>\n                                </div>\n                                <div className=\"cart__item-details\">\n                                    <span className=\"cart__item-ins\">Quantity:</span>\n                                    <span>{quantity}</span>\n                                </div>\n                                <div className=\"cart__item-details\">\n                                    <span className=\"cart__item-ins\">Amount:</span>\n                                    <span>{price * quantity} $</span>\n                                </div>\n                                <div \n                                    className=\"cart__close\" \n                                    onClick={() => deleteFromCart(id)}>\n                                    &times;\n                                </div>\n                            </div>\n                        );\n                    })}\n                </div>\n                <button\n                    className=\"order\"\n                    onClick={() => this.onTakeOrder()}\n                >\n                    Make order\n                </button>\n            </>\n        );\n    }\n};\n\nconst generateOrder = (items) => {\n    const newOrder = items.map(item => {\n        return {\n            name: item.title,\n            portions: item.quantity\n        };\n    });\n\n    return newOrder;\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        itemsInCart: state.itemsInCart,\n        isOrderTook: state.isOrderTook,\n        isLoading: state.isLoading,\n        isError: state.isError\n    };\n};\n\nCartTable.propTypes = {\n    RestoService: PropTypes.object.isRequired,\n    itemsInCart: PropTypes.arrayOf(\n        PropTypes.object,\n    ).isRequired,\n    clearCart: PropTypes.func.isRequired,\n    requested: PropTypes.func.isRequired,\n    hasError: PropTypes.func.isRequired,\n    deleteFromCart: PropTypes.func.isRequired,\n    isOrderTook: PropTypes.bool.isRequired,\n    isLoading: PropTypes.bool.isRequired,\n    isError: PropTypes.bool.isRequired\n};\n\nexport default WithRestoService()(connect(\n    mapStateToProps, \n    { deleteFromCart, clearCart, requested, hasError }\n)(CartTable));","import CartTable from './cart-table';\n\nexport default CartTable;","import React from 'react';\nimport CartTable from '../cart-table';\n\nconst CartPage = () => {\n    return (\n        <div className=\"cart\"> \n            <CartTable />\n        </div>\n    );\n};\n\nexport default CartPage;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport WithRestoService from '../hoc';\nimport Spinner from '../spinner';\nimport Error from '../error';\nimport { menuLoaded, requested, hasError, addToCart } from '../../actions';\nimport PropTypes from 'prop-types';\n\nimport './menu-item.scss';\n\nclass MenuItem extends Component {\n  componentDidMount() {\n    const { RestoService, menuItems, menuLoaded, requested, hasError } = this.props;\n\n    if (!menuItems.length) {\n      requested();\n\n      RestoService.getMenuItems()\n        .then(result => menuLoaded(result))\n        .catch(error => hasError());\n    }\n  }\n\n\n  render() {\n    const { menuItems, isLoading, isError, addToCart, match, history } = this.props;\n\n    if (isError) {\n      return (\n        <div className=\"item__page\">\n          <Error />\n        </div>\n      );\n    }\n\n    if (isLoading) {\n      return (\n        <div className=\"item__page\">\n          <Spinner />\n        </div>\n      );\n    }\n\n    const item = menuItems.find(elem => elem.id === Number(match.params.id));\n    const { title, url, category, price, description, id } = item;\n\n    return (\n      <div className=\"item__page\">\n        <div className=\"menu__item item__block\">\n          <div className=\"menu__title\">{title}</div>\n          <img className=\"menu__img\" src={url} alt={title}></img>\n          <div className=\"menu__title\">{description}</div>\n          <div className=\"menu__category\">Category: <span>{category}</span></div>\n          <div className=\"menu__price\">Price: <span>{price}$</span></div>\n          <span className={`menu__category_img ${category}`}></span>\n          <div className=\"menu__buttons\">\n            <button onClick = {() => addToCart(id)} className=\"menu__btn\">Add to cart</button>\n            <button onClick = {() => history.goBack()} className=\"menu__btn\">Back</button>\n          </div>\n        </div>\n      </div>\n    );\n  };\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    menuItems: state.menu,\n    isLoading: state.isLoading,\n    isError: state.isError\n  };\n};\n\nconst mapDispatchToProps = {\n  menuLoaded, \n  requested, \n  hasError, \n  addToCart \n};\n\nMenuItem.propTypes = {\n  RestoService: PropTypes.object.isRequired,\n  menuItems: PropTypes.arrayOf(\n    PropTypes.object,\n  ).isRequired,\n  menuLoaded: PropTypes.func.isRequired,\n  requested: PropTypes.func.isRequired,\n  hasError: PropTypes.func.isRequired,\n  addToCart: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  isError: PropTypes.bool.isRequired\n};\n\nexport default WithRestoService()(connect(\n  mapStateToProps, \n  mapDispatchToProps\n)(MenuItem));","import MenuItem from './menu-item';\nexport default MenuItem;","import React from 'react';\nimport MenuItem from '../menu-item';\n\nconst ItemPage = ({ match, history }) => {\n  return (\n    <MenuItem match={match} history={history} />\n  );\n};\n\nexport default ItemPage;","import AppHeader from './app-header';\n\nexport default AppHeader;","import React from 'react';\nimport cartIcon from './shopping-cart-solid.svg';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport './app-header.scss';\n\nconst AppHeader = ({ totalPrice }) => {\n    return (\n        <header className=\"header\">\n            <NavLink to='/' className=\"header__link\">Menu</NavLink>\n            <NavLink to='/cart/' className=\"header__link\">\n                <img className=\"header__cart\" src={cartIcon} alt=\"cart\"></img>\n                Total: {totalPrice} $\n            </NavLink>\n        </header>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        totalPrice: state.totalPrice\n    };\n};\n\nAppHeader.propTypes = {\n    totalPrice: PropTypes.number.isRequired\n};\n\nexport default connect(mapStateToProps, null)(AppHeader);","import App from './app';\n\nexport default App;","import React from 'react';\nimport { MainPage, CartPage, ItemPage } from '../pages';\nimport AppHeader from '../app-header';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Background from './food-bg.jpg';\n\nconst App = () => {\n    return (\n        <div style={{background: `url(${Background}) center center/cover no-repeat`}} className=\"app\">\n            <AppHeader />\n            <Switch>\n                <Route path='/' exact component={MainPage} />\n                <Route path='/cart/' exact component={CartPage} />\n                <Route path='/menu/:id' component={ItemPage} />\n            </Switch>\n        </div>\n    );\n};\n\nexport default App;","import ErrorBoundry from './error-boundry';\n\nexport default ErrorBoundry;","import React, { Component } from 'react';\nimport Error from '../error';\n\nexport default class ErrorBoundry extends Component {\n    state = {\n        error: false\n    }\n\n    componentDidCatch() {\n        this.setState({ error: true })\n    }\n\n    render() {\n       if (this.state.error) {\n            return (\n               <div className=\"item__page\">\n                   <Error />\n               </div>\n           )\n       }\n\n       return this.props.children;\n    }\n}","const initialState = {\n  menu: [],\n  itemsInCart: [],\n  isLoading: true,\n  isError: false,\n  isOrderTook: false,\n  totalPrice: 0\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'REQUSTED':\n      return {\n        ...state,\n        isLoading: true\n      };\n    \n    case 'MENU_LOADED':\n      return {\n        ...state,\n        menu: action.payload,\n        isLoading: false\n      };\n\n    case 'HAS_ERROR':\n      return {\n        ...state,\n        isError: true,\n        isLoading: false\n      };\n\n    case 'ADD_TO_CART':\n      const isItemInCart = state.itemsInCart.some(elem => elem.id === action.payload);\n\n      if (isItemInCart) {\n        const item = state.itemsInCart.find(elem => elem.id === action.payload);\n        const newItem = {...item, quantity: ++item.quantity};\n        const items = state.itemsInCart.filter(elem => elem.id !== item.id).concat(newItem);\n\n        return {\n          ...state,\n          itemsInCart: items,\n          totalPrice: state.totalPrice + newItem.price,\n          isOrderTook: false,\n        };\n      }\n\n      const item = state.menu.find(elem => elem.id === action.payload);\n      const newItem = {...item, quantity: 1};\n      const items = [...state.itemsInCart, newItem];\n\n      return {\n        ...state,\n        itemsInCart: items,\n        totalPrice: state.totalPrice + newItem.price,\n        isOrderTook: false,\n      };\n\n    case 'DELETE_FROM_CART':\n      const itemForDelete = state.itemsInCart.find(elem => elem.id === action.payload);\n\n      return {\n        ...state,\n        itemsInCart: state.itemsInCart.filter(elem => elem.id !== itemForDelete.id),\n        totalPrice: state.totalPrice - (itemForDelete.price * itemForDelete.quantity),\n        isOrderTook: false,\n      };\n\n    case 'CLEAR_CART':\n      return {\n        ...state,\n        itemsInCart: [],\n        isOrderTook: true,\n        isLoading: false,\n        totalPrice: 0\n      };\n  \n    default:\n      return state;\n  }\n};\n\nexport default reducer;","import { createStore } from 'redux';\nimport reducer from './reducers';\n\nconst store = createStore(reducer);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport ErrorBoundry from './components/error-boundry';\nimport RestoService from './services/resto-service';\nimport RestoServiceContext from './components/resto-service-context';\nimport store from './store';\n\nimport './index.scss';\n\nconst restoService = new RestoService();\n\nReactDOM.render(\n    <Provider store={store}>\n        <ErrorBoundry>\n            <RestoServiceContext.Provider value={restoService}>\n                <Router>\n                    <App />\n                </Router>\n            </RestoServiceContext.Provider>\n        </ErrorBoundry>\n    </Provider>, \n    document.getElementById('root')\n);","export default class RestoService {\n  _apiBaseUrl = 'http://localhost:3000';\n\n  getResource = async (url) => {\n    const response = await fetch(`${this._apiBaseUrl}${url}`);\n\n    if (!response.ok) {\n      throw new Error(`Server Error: ${response.status}`);\n    }\n\n    return await response.json();\n  }\n\n  getMenuItems = async () => {\n    return await this.getResource('/menu/');\n  }\n\n  getOrderNumber = async () => {\n    const response = await this.getResource('/orders/');\n    const orderNumber = response.length + 1;\n    \n    return orderNumber;\n  }\n\n  setOrder = async (order) => {\n    const orderNumber = await this.getOrderNumber();\n    const newOrder = {\n      id: orderNumber,\n      order\n    };\n    const bodyForRequest = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8'\n      },\n      body: JSON.stringify(newOrder)\n    };\n    const response = await fetch(`${this._apiBaseUrl}/orders`, bodyForRequest);\n\n    if (!response.ok){\n      throw new Error('Server error'); \n    }\n  }\n}"],"sourceRoot":""}